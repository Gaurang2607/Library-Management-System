<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="PictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>